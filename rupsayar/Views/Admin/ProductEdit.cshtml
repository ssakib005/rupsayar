@model rupsayar.Models.VM.Tbl_Product_VM

@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit Product</h2>
<link href="~/AdminLTE/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />

@using (Html.BeginForm("ProductEdit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x=>x.Id)
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 2, 55, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tbl_CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Tbl_CategoryId, new SelectList(ViewBag.Categories, "Id", "CategoryName"), "Please Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Tbl_CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsNewArrival, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsNewArrival)
                @Html.ValidationMessageFor(model => model.IsNewArrival, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <label>Product Images</label>
        <div class="col-md-10">
            @if (Model.Tbl_ProductImages != null && Model.Tbl_ProductImages.Count > 0)
            {
                foreach (var item in Model.Tbl_ProductImages)
                {
                    <img decoding="async" width="150" height="150"
                         src="@Url.Content(item.FilePath)"
                         class="attachment-woocommerce_thumbnail size-woocommerce_thumbnail">
                }
            }
        </div>
    </div>
    <div class="form-group">
        <label for="customFile">Upload Files</label>
        <div class="custom-file">
            @Html.TextBoxFor(model => model.Tbl_ProductImageEditList, new { @type = "file", @multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Tbl_ProductImageEditList, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "../Admin/ProductList")
</div>